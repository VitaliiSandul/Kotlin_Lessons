// Generated by view binder compiler. Do not edit!
package com.sandul.pifagorapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.Toolbar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sandul.pifagorapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TestLayoutBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout container;

  @NonNull
  public final ScrollView contentScrollView;

  @NonNull
  public final Button primaryButtonAlternate;

  @NonNull
  public final Button primaryButtonMain;

  @NonNull
  public final Button secondaryButtonAlternate;

  @NonNull
  public final Button secondaryButtonMain;

  @NonNull
  public final Toolbar toolbar;

  private TestLayoutBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout container, @NonNull ScrollView contentScrollView,
      @NonNull Button primaryButtonAlternate, @NonNull Button primaryButtonMain,
      @NonNull Button secondaryButtonAlternate, @NonNull Button secondaryButtonMain,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.container = container;
    this.contentScrollView = contentScrollView;
    this.primaryButtonAlternate = primaryButtonAlternate;
    this.primaryButtonMain = primaryButtonMain;
    this.secondaryButtonAlternate = secondaryButtonAlternate;
    this.secondaryButtonMain = secondaryButtonMain;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TestLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TestLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.test_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TestLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout container = (CoordinatorLayout) rootView;

      id = R.id.contentScrollView;
      ScrollView contentScrollView = ViewBindings.findChildViewById(rootView, id);
      if (contentScrollView == null) {
        break missingId;
      }

      id = R.id.primaryButton_alternate;
      Button primaryButtonAlternate = ViewBindings.findChildViewById(rootView, id);
      if (primaryButtonAlternate == null) {
        break missingId;
      }

      id = R.id.primaryButton_main;
      Button primaryButtonMain = ViewBindings.findChildViewById(rootView, id);
      if (primaryButtonMain == null) {
        break missingId;
      }

      id = R.id.secondaryButton_alternate;
      Button secondaryButtonAlternate = ViewBindings.findChildViewById(rootView, id);
      if (secondaryButtonAlternate == null) {
        break missingId;
      }

      id = R.id.secondaryButton_main;
      Button secondaryButtonMain = ViewBindings.findChildViewById(rootView, id);
      if (secondaryButtonMain == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new TestLayoutBinding((CoordinatorLayout) rootView, container, contentScrollView,
          primaryButtonAlternate, primaryButtonMain, secondaryButtonAlternate, secondaryButtonMain,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
